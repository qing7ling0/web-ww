{"version":3,"sources":["../../src/utils/log-utils.js"],"names":["log4js","require","logConfig","configure","logUtil","errorLogger","getLogger","resLogger","userModifyLogger","debugLogger","logError","ctx","error","resTime","formatError","err","logText","String","formatReqLog","request","name","message","stack","logResponse","info","formatRes","status","JSON","stringify","body","method","originalUrl","ip","startTime","query","userModify","type","data","time","Date","now","formatUserModify","debug","formatDebug","module","exports"],"mappings":"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","file":"log-utils.js","sourcesContent":["'use strict'\r\n\r\nvar log4js = require('log4js');\r\n\r\nvar logConfig = require('../../config/log-config');\r\n\r\n//加载配置文件\r\nlog4js.configure(logConfig);\r\n\r\nvar logUtil = {};\r\n\r\nvar errorLogger = log4js.getLogger('errorLogger');\r\nvar resLogger = log4js.getLogger('resLogger');\r\nvar userModifyLogger = log4js.getLogger('userModifyLogger');\r\nvar debugLogger = log4js.getLogger('debugLogger')\r\n\r\n//封装错误日志\r\nlogUtil.logError = function (ctx, error, resTime) {\r\n    if (ctx && error) {\r\n        errorLogger.error(formatError(ctx, error, resTime));\r\n    }\r\n};\r\n//格式化错误日志\r\nvar formatError = function (ctx, err, resTime) {\r\n    var logText = new String();\r\n\r\n    //错误信息开始\r\n    logText += \"\\n\" + \"*************** error log start ***************\" + \"\\n\";\r\n\r\n    //添加请求日志\r\n    logText += formatReqLog(ctx.request, resTime);\r\n\r\n    //错误名称\r\n    logText += \"err name: \" + err.name + \"\\n\";\r\n    //错误信息\r\n    logText += \"err message: \" + err.message + \"\\n\";\r\n    //错误详情\r\n    logText += \"err stack: \" + err.stack + \"\\n\";\r\n\r\n    //错误信息结束\r\n    logText += \"*************** error log end ***************\" + \"\\n\";\r\n\r\n    return logText;\r\n};\r\n\r\n//封装响应日志\r\nlogUtil.logResponse = function (ctx, resTime) {\r\n    if (ctx) {\r\n        resLogger.info(formatRes(ctx, resTime));\r\n    }\r\n};\r\n//格式化响应日志\r\nvar formatRes = function (ctx, resTime) {\r\n    var logText = new String();\r\n\r\n    //响应日志开始\r\n    logText += \"\\n\" + \"*************** response log start ***************\" + \"\\n\";\r\n\r\n    //添加请求日志\r\n    logText += formatReqLog(ctx.request, resTime);\r\n\r\n    //响应状态码\r\n    logText += \"response status: \" + ctx.status + \"\\n\";\r\n\r\n    //响应内容\r\n    logText += \"response body: \" + \"\\n\" + JSON.stringify(ctx.body) + \"\\n\";\r\n\r\n    //响应日志结束\r\n    logText += \"*************** response log end ***************\" + \"\\n\";\r\n\r\n    return logText;\r\n\r\n}\r\n\r\n//格式化请求日志\r\nvar formatReqLog = function (ctx, resTime) {\r\n\r\n    var logText = new String();\r\n\r\n    var method = ctx.method;\r\n    //访问方法\r\n    logText += \"request method: \" + method + \"\\n\";\r\n\r\n    //请求原始地址\r\n    logText += \"request originalUrl:  \" + ctx.originalUrl + \"\\n\";\r\n\r\n    //客户端ip\r\n    logText += \"request client ip:  \" + ctx.ip + \"\\n\";\r\n\r\n    //开始时间\r\n    var startTime;\r\n    //请求参数\r\n    if (method === 'GET') {\r\n        logText += \"request query:  \" + JSON.stringify(ctx.query) + \"\\n\";\r\n        // startTime = req.query.requestStartTime;\r\n    } else {\r\n        logText += \"request body: \" + \"\\n\" + JSON.stringify(ctx) + \"\\n\";\r\n        // startTime = req.body.requestStartTime;\r\n    }\r\n    //服务器响应时间\r\n    logText += \"response time: \" + resTime + \"\\n\";\r\n\r\n    return logText;\r\n}\r\n\r\n//封装用户修改日志\r\nlogUtil.userModify = function (type, data, time=Date.now) {\r\n    userModifyLogger.info(formatUserModify(type, data, time));\r\n};\r\n//格式化用户修改日志\r\nvar formatUserModify = function (type, data, time) {\r\n    var logText = new String();\r\n    //用户修改内容\r\n    logText += \"[\" + time + \"] [user modify] : \" + \"\\n\" + JSON.stringify(data) + \"\\n\";\r\n\r\n    return logText;\r\n}\r\n\r\n\r\n//封装调试日志\r\nlogUtil.debug = function (message, time=Date.now) {\r\n    debugLogger.debug(formatDebug(message, time));\r\n};\r\n//格式化调试日志\r\nvar formatDebug = function (message, time) {\r\n    var logText = new String();\r\n    //调试内容\r\n    logText += \"[\" + time + \"] [debug] : \" + \"\\n\" + message + \"\\n\";\r\n\r\n    return logText;\r\n}\r\n\r\nmodule.exports = logUtil;"]}