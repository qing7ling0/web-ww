{"version":3,"sources":["../src/server.js"],"names":["Koa","require","app","views","json","onerror","bodyparser","logger","cors","router","conver","session","SessionStore","config","logUtil","responseFormatter","schemas","_router","_sessionStore","use","store","credentials","ctx","next","start","Date","ms","logResponse","logError","routes","allowedMethods","on","err","console","error","module","exports"],"mappings":"AAAA;;;;;;AACA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,MAAM,IAAIF,GAAJ,EAAZ;AACA,IAAMG,QAAQF,QAAQ,WAAR,CAAd;AACA,IAAMG,OAAOH,QAAQ,UAAR,CAAb;AACA,IAAMI,UAAUJ,QAAQ,aAAR,CAAhB;AACA,IAAMK,aAAaL,QAAQ,gBAAR,CAAnB;AACA,IAAMM,SAASN,QAAQ,YAAR,CAAf;AACA,IAAMO,OAAOP,QAAQ,UAAR,CAAb;AACA,IAAMQ,SAASR,QAAQ,YAAR,CAAf;AACA,IAAMS,SAAST,QAAQ,aAAR,CAAf;AACA,IAAMU,UAAUV,QAAQ,cAAR,CAAhB;;AAGA,IAAMW,eAAeX,QAAQ,iBAAR,CAArB;AACA,IAAMY,SAASZ,QAAQ,iBAAR,CAAf;AACA,IAAMa,UAAUb,QAAQ,mBAAR,CAAhB;AACA,IAAMc,oBAAoBd,QAAQ,kCAAR,CAA1B;AACA,IAAMe,UAAUf,QAAQ,iBAAR,CAAhB;;AAEA,IAAMgB,UAAU,IAAIR,MAAJ,EAAhB;AACA,IAAMS,gBAAgB,IAAIN,YAAJ,EAAtB;;AAEAV,IAAIiB,GAAJ,CAAQR,qBAAYE,OAAOF,OAAnB,IAA4BS,OAAMF,aAAlC,IAAR;AACA;AACAb,QAAQH,GAAR;;AAEAc,QAAQC,OAAR;;AAEA;AACAf,IAAIiB,GAAJ,CAAQX,KAAK,EAACa,aAAY,IAAb,EAAL,CAAR;AACA;;AAEAnB,IAAIiB,GAAJ,CAAQZ,QAAR;AACA;AACAL,IAAIiB,GAAJ;AAAA,uEAAQ,iBAAMG,GAAN,EAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ;AACMC,6BAFF,GAEU,IAAIC,IAAJ,EAFV;AAGJ;;AAHI;AAAA;AAAA,+BAOMF,MAPN;;AAAA;;AASAG,6BAAK,IAAID,IAAJ,KAAaD,KAAlB;AACA;AACAV,gCAAQa,WAAR,CAAoBL,GAApB,EAAyBI,EAAzB;;AAXA;AAAA;;AAAA;AAAA;AAAA;;;AAeAA,6BAAK,IAAID,IAAJ,KAAaD,KAAlB;AACA;AACAV,gCAAQc,QAAR,CAAiBN,GAAjB,eAA6BI,EAA7B;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA;AAoBAxB,IAAIiB,GAAJ,CAAQJ,kBAAkB,OAAlB,CAAR;;AAEA;AACA;AACA;;AAEAb,IAAIiB,GAAJ,CAAQF,QAAQY,MAAR,EAAR,EAA0BZ,QAAQa,cAAR,EAA1B;AACA;AACA5B,IAAI6B,EAAJ,CAAO,OAAP,EAAgB,UAACC,GAAD,EAAMV,GAAN,EAAc;AAC1BW,YAAQC,KAAR,CAAc,cAAd,EAA8BF,GAA9B,EAAmCV,GAAnC;AACH,CAFD;;AAIAa,OAAOC,OAAP,GAAiBlC,GAAjB","file":"server.js","sourcesContent":["'use strict'\r\nconst Koa = require('koa')\r\nconst app = new Koa()\r\nconst views = require('koa-views')\r\nconst json = require('koa-json')\r\nconst onerror = require('koa-onerror')\r\nconst bodyparser = require('koa-bodyparser')\r\nconst logger = require('koa-logger')\r\nconst cors = require('koa-cors')\r\nconst router = require('koa-router')\r\nconst conver = require('koa-convert')\r\nconst session = require('koa-session2')\r\n\r\n\r\nconst SessionStore = require('./session-store');\r\nconst config = require('../config/index');\r\nconst logUtil = require('./utils/log-utils');\r\nconst responseFormatter = require('./middlewares/response-formatter');\r\nconst schemas = require('./schemas/index');\r\n\r\nconst _router = new router();\r\nconst _sessionStore = new SessionStore();\r\n\r\napp.use(session({...config.session, store:_sessionStore}))\r\n// error handler\r\nonerror(app);\r\n\r\nschemas(_router);\r\n\r\n// middlewares\r\napp.use(cors({credentials:true}));\r\n// app.use(json())\r\n\r\napp.use(logger());\r\n// logger\r\napp.use(async(ctx, next) => {\r\n    //响应开始时间\r\n    const start = new Date();\r\n    //响应间隔时间\r\n    var ms;\r\n    try {\r\n        //开始进入到下一个中间件\r\n        await next();\r\n\r\n        ms = new Date() - start;\r\n        //记录响应日志\r\n        logUtil.logResponse(ctx, ms);\r\n\r\n    } catch (error) {\r\n\r\n        ms = new Date() - start;\r\n        //记录异常日志\r\n        logUtil.logError(ctx, error, ms);\r\n    }\r\n});\r\napp.use(responseFormatter('^/api'));\r\n\r\n// // routes\r\n// app.use(index.routes(), index.allowedMethods())\r\n// app.use(users.routes(), users.allowedMethods())\r\n\r\napp.use(_router.routes(), _router.allowedMethods());\r\n// error-handling\r\napp.on('error', (err, ctx) => {\r\n    console.error('server error', err, ctx)\r\n});\r\n\r\nmodule.exports = app"]}