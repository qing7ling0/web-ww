{"version":3,"sources":["../src/session-store.js"],"names":["require","Store","mongoose","randomBytes","Schema","sessionSchema","sid","String","maxAage","Number","session","SessonStore","__timer","Map","sessionModel","model","length","toString","ctx","findOne","data","JSON","parse","getID","maxAge","update","stringify","multi","upsert","has","__timeout","get","clearTimeout","set","setTimeout","destroy","console","log","delete","deleteOne","module","exports"],"mappings":";;;;;;;;eAAkBA,QAAQ,cAAR,C;IAAVC,K,YAAAA,K;;AACR,IAAMC,WAAWF,QAAQ,UAAR,CAAjB;;gBACwBA,QAAQ,QAAR,C;IAAhBG,W,aAAAA,W;;AAER,IAAMC,SAASF,SAASE,MAAxB;;AAEA,IAAMC,gBAAgB,IAAID,MAAJ,CAAW;AAC/BE,OAAcC,MADiB;AAE/BC,WAAcC,MAFiB;AAG/BC,WAAcH;AAHiB,CAAX,CAAtB;;IAMMI,W;AACJ,yBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,SAAKC,YAAL,GAAoBZ,SAASa,KAAT,CAAe,SAAf,EAA0BV,aAA1B,CAApB;AACD;;;;0BAEKW,M,EAAQ;AACZ,aAAOb,YAAYa,MAAZ,EAAoBC,QAApB,CAA6B,KAA7B,CAAP;AACD;;;;0FAESX,G,EAAKY,G;;;;;;;uBACI,KAAKJ,YAAL,CAAkBK,OAAlB,CAA0B,EAACb,kBAAeA,GAAhB,EAA1B,C;;;AAAbc,oB;;sBACAA,QAAQA,KAAKV,O;;;;;iDACRW,KAAKC,KAAL,CAAWF,KAAKV,OAAhB,C;;;iDAEF,I;;;;;;;;;;;;;;;;;;;4FAGCA,O;;;wFAAsD,E;8BAA3CJ,G;YAAAA,G,6BAAM,KAAKiB,KAAL,CAAW,EAAX,C;iCAAgBC,M;YAAAA,M,gCAAS,O;;YAAgBN,G;;;;;;;;;AAE5DE,oB,GAAO,KAAKN,YAAL,CAAkBK,OAAlB,CAA0B,EAACb,kBAAeA,GAAhB,EAA1B,C;AACPmB,sB,GAAS,I;;uBACA,KAAKX,YAAL,CAAkBW,MAAlB,CAAyB,EAACnB,kBAAeA,GAAhB,EAAzB,EAAiD,EAACA,kBAAeA,GAAhB,EAAuBI,SAAQW,KAAKK,SAAL,CAAehB,OAAf,CAA/B,EAAwDc,QAAOA,MAA/D,EAAjD,EAAyH,EAACG,OAAM,IAAP,EAAaC,QAAO,IAApB,EAAzH,C;;;AAAbR,oB;;;AAEA,oBAAIA,IAAJ,EAAU;AACR,sBAAI,KAAKR,OAAL,CAAaiB,GAAb,CAAiBvB,GAAjB,CAAJ,EAA2B;AACnBwB,6BADmB,GACP,KAAKlB,OAAL,CAAamB,GAAb,CAAiBzB,GAAjB,CADO;;AAEzB,wBAAIwB,SAAJ,EAAeE,aAAaF,SAAb;AAChB;;AAED,sBAAIN,MAAJ,EAAY;AACV,yBAAKZ,OAAL,CAAaqB,GAAb,CAAiB3B,GAAjB,EAAsB4B,WAAW;AAAA,6BAAM,MAAKC,OAAL,CAAa7B,GAAb,CAAN;AAAA,qBAAX,EAAoCkB,MAApC,CAAtB;AACD;AACF;;;;;;;;AAEDY,wBAAQC,GAAR,CAAY,sBAAsBhB,KAAKK,SAAL,cAAlC;;;kDAEKpB,G;;;;;;;;;;;;;;;;;;;4FAGKA,G,EAAKY,G;;;;;AACjB,qBAAKN,OAAL,CAAa0B,MAAb,CAAoBhC,GAApB;;uBACa,KAAKQ,YAAL,CAAkByB,SAAlB,CAA4B,EAACjC,kBAAeA,GAAhB,EAA5B,C;;;;;;;;;;;;;;;;;;;;;;;;AAIjBkC,OAAOC,OAAP,GAAiB9B,WAAjB","file":"session-store.js","sourcesContent":["const { Store } = require(\"koa-session2\");\r\nconst mongoose = require('mongoose');\r\nconst { randomBytes } = require('crypto');\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nconst sessionSchema = new Schema({\r\n  sid:          String,\r\n  maxAage:      Number,\r\n  session:      String\r\n});\r\n\r\nclass SessonStore {\r\n  constructor() {\r\n    this.__timer = new Map();\r\n    this.sessionModel = mongoose.model('session', sessionSchema);\r\n  }\r\n  \r\n  getID(length) {\r\n    return randomBytes(length).toString('hex');\r\n  }\r\n\r\n  async get(sid, ctx) {\r\n    let data = await this.sessionModel.findOne({sid:`SESSION:${sid}`});\r\n    if (data && data.session) {\r\n      return JSON.parse(data.session);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async set(session, { sid = this.getID(24), maxAge = 1000000 } = {}, ctx) {\r\n    try {\r\n      let data = this.sessionModel.findOne({sid:`SESSION:${sid}`});\r\n      let update = true;\r\n      data = await this.sessionModel.update({sid:`SESSION:${sid}`}, {sid:`SESSION:${sid}`, session:JSON.stringify(session), maxAge:maxAge}, {multi:true, upsert:true});        \r\n\r\n      if (data) {\r\n        if (this.__timer.has(sid)) {\r\n          const __timeout = this.__timer.get(sid);\r\n          if (__timeout) clearTimeout(__timeout);\r\n        }\r\n        \r\n        if (maxAge) {\r\n          this.__timer.set(sid, setTimeout(() => this.destroy(sid), maxAge));\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log('session set error' + JSON.stringify(e));\r\n    }\r\n    return sid;\r\n  }\r\n\r\n  async destroy(sid, ctx) {\r\n    this.__timer.delete(sid);\r\n    return await this.sessionModel.deleteOne({sid:`SESSION:${sid}`});\r\n  }\r\n}\r\n\r\nmodule.exports = SessonStore;"]}