{"version":3,"sources":["../../src/data/sales.js"],"names":["validate","logUtil","require","SalesData","query","populate","exec","goods","page","options","conditions","getList","goodsPopulate","list","id","findById","profile","orderPopulate","order","customerDoc","phone","isMobile","findOne","customer","_customerData","name","sex","birthday","weixin","findOneAndUpdate","_id","vip_card_date","format","vip_card_shop","shop","vip_card_guide","guide","cmodel","save","doc","ADD_FAIL","updateOrAddCustomerByOrder","newOrder","update","ret","UPDATE_FAIL","deleteMany","DELETE_FAIL","ids","length","remove","$in","module","exports"],"mappings":"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","file":"sales.js","sourcesContent":["import moment from 'moment'\r\n\r\nimport { \r\n  userModel, \r\n  userShopGuideModel, \r\n  userOperateModel, \r\n  userProductionModel,\r\n  userAdminModel,\r\n  accountModel,\r\n  materialModel,\r\n  colorModel,\r\n  goodsTypeModel,\r\n  goodsSeasonModel,\r\n  goodsStyleModel,\r\n  xuanHaoModel,\r\n  goodsModel,\r\n  orderModel,\r\n  customerModel\r\n} from '../models/index.js'\r\n\r\nimport { ApiError, ApiErrorNames } from '../error/api-errors'\r\nimport utils from '../utils/utils'\r\nimport baseUtils from '../base/utils/utils'\r\nimport * as validate from '../base/utils/validate'\r\nimport constants from '../constants/constants'\r\nimport DB from '../db/DB'\r\n\r\nimport {customerData} from './index'\r\n// import \r\n\r\nconst logUtil = require('../utils/log-utils');\r\n\r\nclass SalesData {\r\n\r\n  goodsPopulate(query) {\r\n    return query\r\n      .populate('type').populate('season').populate('style')\r\n      .populate('s_material').populate('s_out_color').populate('s_in_color')\r\n      .populate('s_bottom_color').populate('s_bottom_side_color')\r\n      .populate('b_material').populate('b_color')\r\n      .populate('ws_material').exec();\r\n  }\r\n\r\n  /**\r\n   * 获取商品列表\r\n   * \r\n   * @param {any} goods 商品类型（鞋，皮带，表带）\r\n   * @param {any} page \r\n   * @param {any} options \r\n   * @returns \r\n   * @memberof SalesData\r\n   */\r\n  async getGoodsList(goods, page, options) {\r\n    if (goods) {\r\n      if (!options.conditions) {\r\n        options.conditions = {};\r\n      }\r\n      options.conditions.goods = goods;\r\n    }\r\n    const list = await DB.getList(goodsModel, options, page, (query)=>{\r\n      return this.goodsPopulate(query);\r\n    });\r\n    return list;\r\n  }\r\n\r\n  async getGoodsProfile(id) {\r\n    const profile = await DB.findById(goodsModel, id, (query)=>{\r\n      return this.goodsPopulate(query);\r\n    });\r\n    return profile;\r\n  }\r\n  \r\n  orderPopulate(query) {\r\n    return query\r\n      .populate('s_shoes').populate('shop').populate('guide')\r\n      .populate('customer').exec();\r\n  }\r\n  async getOrderList(page, options) {\r\n    const list = await DB.getList(orderModel, options, page, (query)=>{\r\n      return this.orderPopulate(query);\r\n    });\r\n    return list;\r\n  }\r\n\r\n  async updateOrAddCustomerByOrder(order, customerDoc) {\r\n    if (customerDoc && customerDoc.phone && !validate.isMobile(customerDoc.phone)) {\r\n      return null;\r\n    }\r\n\r\n    let customer = await customerModel.findOne({phone:customerDoc.phone});\r\n    let _customerData = {}\r\n    if (customer) { // 更新客户信息\r\n      if (customerDoc.name && customer.name !== customerDoc.name) {\r\n        _customerData.name = customerDoc.name;\r\n      }\r\n      if (customerDoc.sex && customer.sex !== customerDoc.sex) {\r\n        _customerData.sex = customerDoc.sex;\r\n      }\r\n      if (customerDoc.birthday && customer.birthday !== customerDoc.birthday) {\r\n        _customerData.birthday = customerDoc.birthday;\r\n      }\r\n      if (customer.weixin !== customerDoc.weixin) {\r\n        _customerData.weixin = customerDoc.weixin;\r\n      }\r\n      await customerModel.findOneAndUpdate(customer._id, _customerData);\r\n      return customer;\r\n    } else { // 添加客户\r\n      _customerData = {...customerDoc}\r\n      _customerData.vip_card_date = moment().format('YYYY-MM-DD');\r\n      _customerData.vip_card_shop = order.shop;\r\n      _customerData.vip_card_guide = order.guide;\r\n      let cmodel = new customerModel(_customerData);\r\n      customer = await cmodel.save();\r\n      return customer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async addOrder(doc, options={}) {\r\n    if (doc) {\r\n      if (!doc.customer || !doc.customer.phone) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n\r\n      let customer = await this.updateOrAddCustomerByOrder(doc, doc.customer);\r\n      if (!customer) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n      doc.customer = customer._id;\r\n\r\n      let order = new orderModel(doc);\r\n      if (order) {\r\n        let newOrder = await order.save(options);\r\n        if (newOrder) {\r\n          return newOrder;\r\n        }\r\n      } else {\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n    }\r\n  }\r\n\r\n  async updateOrder(conditions, doc, options) {\r\n    if (doc) {\r\n      if (!doc.customer || !doc.customer.phone) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n\r\n      let customer = await this.updateOrAddCustomerByOrder(doc.customer);\r\n      if (!customer) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n      doc.customer = customer._id;\r\n\r\n      let ret = await orderModel.update(conditions, doc, options);\r\n      return ret;\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.UPDATE_FAIL);\r\n    }\r\n  }\r\n\r\n  async removeOrder(conditions) {\r\n    if (conditions) {\r\n      return await orderModel.deleteMany(conditions);\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n\r\n  async removeOrderByIds(ids) {\r\n    if (ids && ids.length > 0) {\r\n      return await orderModel.remove({_id:{$in:ids}});\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = new SalesData()"]}