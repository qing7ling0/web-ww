{"version":3,"sources":["../../src/data/sales.js"],"names":["logUtil","require","SalesData","query","populate","exec","page","options","getList","goodsShoesPopulate","list","id","findById","profile","orderPopulate","customerDoc","phone","isMobile","findOne","doc","customer","_customerData","name","sex","birthday","weixin","updateOne","vip_card_date","format","vip_card_shop","shop","vip_card_guide","guide","cmodel","save","ADD_FAIL","updateOrAddCustomerByOrder","_id","order","newOrder","conditions","update","ret","UPDATE_FAIL","deleteMany","DELETE_FAIL","ids","length","remove","$in","module","exports"],"mappings":"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","file":"sales.js","sourcesContent":["import moment from 'moment'\r\n\r\nimport { \r\n  userModel, \r\n  userShopGuideModel, \r\n  userOperateModel, \r\n  userProductionModel,\r\n  userAdminModel,\r\n  accountModel,\r\n  materialModel,\r\n  colorModel,\r\n  goodsTypeModel,\r\n  goodsSeasonModel,\r\n  goodsStyleModel,\r\n  xuanHaoModel,\r\n  goodsShoesModel,\r\n  orderModel,\r\n  customerModel\r\n} from '../models/index.js'\r\n\r\nimport { ApiError, ApiErrorNames } from '../error/api-errors'\r\nimport utils from '../utils/utils'\r\nimport baseUtils from '../base/utils/utils'\r\nimport validate from '../base/utils/validate'\r\nimport constants from '../constants/constants'\r\nimport DB from '../db/DB'\r\n\r\nimport {customerData} from './index'\r\n// import \r\n\r\nconst logUtil = require('../utils/log-utils');\r\n\r\nclass SalesData {\r\n\r\n  goodsShoesPopulate(query) {\r\n    return query\r\n      .populate('type').populate('season').populate('style')\r\n      .populate('out_color').populate('in_color')\r\n      .populate('bottom_color').populate('bottom_side_color').exec();\r\n  }\r\n\r\n  async getGoodsShoesList(page, options) {\r\n    const list = await DB.getList(goodsShoesModel, options, page, (query)=>{\r\n      return this.goodsShoesPopulate(query);\r\n    });\r\n    return list;\r\n  }\r\n\r\n  async getGoodsShoesProfile(id) {\r\n    const profile = await DB.findById(goodsShoesModel, id, (query)=>{\r\n      return this.goodsShoesPopulate(query);\r\n    });\r\n    return profile;\r\n  }\r\n  \r\n  orderPopulate(query) {\r\n    return query\r\n      .populate('s_shoes').populate('shop').populate('guide')\r\n      .populate('customer').exec();\r\n  }\r\n  async getOrderList(page, options) {\r\n    const list = await DB.getList(orderModel, options, page, (query)=>{\r\n      return this.orderPopulate(query);\r\n    });\r\n    return list;\r\n  }\r\n\r\n  async updateOrAddCustomerByOrder(customerDoc) {\r\n    if (customerDoc && customerDoc.phone && !validate.isMobile(customerDoc.phone)) {\r\n      return null;\r\n    }\r\n\r\n    let customer = await customerModel.findOne({phone:doc.customer.phone});\r\n    let _customerData = {}\r\n    if (customer) { // 更新客户信息\r\n      if (customerDoc.name && customer.name !== customerDoc.name) {\r\n        _customerData.name = customerDoc.name;\r\n      }\r\n      if (customerDoc.sex && customer.sex !== customerDoc.sex) {\r\n        _customerData.sex = customerDoc.sex;\r\n      }\r\n      if (customerDoc.birthday && customer.birthday !== customerDoc.birthday) {\r\n        _customerData.birthday = customerDoc.birthday;\r\n      }\r\n      if (customer.weixin !== customerDoc.weixin) {\r\n        _customerData.weixin = customerDoc.weixin;\r\n      }\r\n      await customer.updateOne(_customerData);\r\n      return customer;\r\n    } else { // 添加客户\r\n      _customerData = {...customerDoc}\r\n      _customerData.vip_card_date = moment().format('YYYY-MM-DD');\r\n      _customerData.vip_card_shop = doc.shop;\r\n      _customerData.vip_card_guide = doc.guide;\r\n      let cmodel = new customerModel(_customerData);\r\n      customer = await cmodel.save();\r\n      return customer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async addOrder(doc, options={}) {\r\n    if (doc) {\r\n      if (!doc.customer || !doc.customer.phone) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n\r\n      let customer = await this.updateOrAddCustomerByOrder(doc.customer);\r\n      if (!customer) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n      doc.customer = customer._id;\r\n\r\n      let order = new orderModel(doc);\r\n      if (order) {\r\n        let newOrder = await order.save(options);\r\n        if (newOrder) {\r\n          return newOrder;\r\n        }\r\n      } else {\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n    }\r\n  }\r\n\r\n  async updateOrder(conditions, doc, options) {\r\n    if (doc) {\r\n      if (!doc.customer || !doc.customer.phone) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n\r\n      let customer = await this.updateOrAddCustomerByOrder(doc.customer);\r\n      if (!customer) {\r\n        // TODO\r\n        // 必须有用户\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n      doc.customer = customer._id;\r\n\r\n      let ret = await orderModel.update(conditions, doc, options);\r\n      return ret;\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.UPDATE_FAIL);\r\n    }\r\n  }\r\n\r\n  async removeOrder(conditions) {\r\n    if (conditions) {\r\n      return await orderModel.deleteMany(conditions);\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n\r\n  async removeOrderByIds(ids) {\r\n    if (ids && ids.length > 0) {\r\n      return await orderModel.remove({_id:{$in:ids}});\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = new SalesData()"]}