{"version":3,"sources":["../../src/data/shop.js"],"names":["logUtil","require","ShopData","page","options","skip","limit","pageSize","Math","max","findOptions","conditions","find","count","total","shops","map","item","isNew","open_date","add","isSameOrAfter","Date","now","toClient","list","projection","findOne","shop","UPDATE_FAIL","doc","save","newShop","ADD_FAIL","update","ret","model","deleteMany","DELETE_FAIL","ids","length","remove","_id","$in","module","exports"],"mappings":"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","file":"shop.js","sourcesContent":["import moment from 'moment'\r\n\r\nimport { \r\n  userModel, \r\n  userShopGuideModel, \r\n  userOperateModel, \r\n  userProductionModel,\r\n  userAdminModel,\r\n  accountModel,\r\n  shopModel\r\n} from '../models/index.js'\r\n\r\nimport { ApiError, ApiErrorNames } from '../error/api-errors'\r\nimport utils from '../utils/utils'\r\nimport baseUtils from '../base/utils/utils'\r\nimport constants from '../constants/constants'\r\n// import \r\n\r\nconst logUtil = require('../utils/log-utils');\r\n\r\nclass ShopData {\r\n\r\n  /**\r\n   * 获取店铺列表\r\n   * \r\n   * @param {any} page \r\n   * @param {any} options {conditions}\r\n   * @memberof ShopData\r\n   */\r\n  async getList(page, options) {\r\n    let skip = 0;\r\n    let limit = page.pageSize || 100;\r\n    if (page.page) {\r\n      skip = Math.max(page.page-1,0) * limit;\r\n    }\r\n    let findOptions = options.options || {};\r\n    findOptions.limit = limit;\r\n    findOptions.skip = skip;\r\n    let conditions = options.conditions || {};\r\n    let total = await shopModel.find(conditions).count();\r\n    let shops = await shopModel.find(conditions, null, findOptions);\r\n    shops = shops.map((item) => {\r\n      let isNew = false;\r\n      if (item.open_date) {\r\n        item.isNew = moment(item.open_date).add(180, 'days').isSameOrAfter(Date.now());\r\n      }\r\n      item = shopModel.toClient(item);\r\n      return item;\r\n    })\r\n    return {\r\n      page:{page:page.page, pageSize:limit, total:total},\r\n      list: shops\r\n    };\r\n    \r\n    // throw new ApiError(ApiErrorNames.UPDATE_FAIL);\r\n  }\r\n\r\n  async find(conditions, projection, options) {\r\n    let shop = await shopModel.findOne(conditions, projection, options);\r\n    if (shop) {\r\n      let isNew = moment(shop.open_date).add(180, 'days').isSameOrAfter(Date.now());\r\n      shop.isNew = isNew;\r\n      return shop;\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.UPDATE_FAIL);\r\n    }\r\n  }\r\n\r\n  async add(doc, options={}) {\r\n    if (doc) {\r\n      let shop = new shopModel(doc);\r\n      if (shop) {\r\n        let newShop = await shop.save(options);\r\n        if (newShop) {\r\n          return newShop;\r\n        }\r\n      } else {\r\n        throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n      }\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.ADD_FAIL);\r\n    }\r\n  }\r\n\r\n  async update(conditions, doc, options) {\r\n    if (doc) {\r\n      let ret = await shopModel.update(conditions, doc, options);\r\n      return ret;\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.UPDATE_FAIL);\r\n    }\r\n  }\r\n\r\n  async remove(conditions) {\r\n    if (conditions) {\r\n      return await model.deleteMany(conditions);\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n\r\n  async removeByIds(ids) {\r\n    if (ids && ids.length > 0) {\r\n      return await shopModel.remove({_id:{$in:ids}});\r\n    } else {\r\n      throw new ApiError(ApiErrorNames.DELETE_FAIL);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = new ShopData()"]}