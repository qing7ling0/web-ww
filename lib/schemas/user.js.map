{"version":3,"sources":["../../src/schemas/user.js"],"names":["schema","query","name","fields","hello","type","resolve","queryTest","a","id","graphqlModule","request","Schemas","graphiql","formatError","path","error","message","JSON","stringify","locations","module","exports"],"mappings":"AAAA;;AAEA;;AAOA;;;;AAEA;;;;AACA;;;;;;;;AAEA,IAAIA,SAAS,2BAAkB;AAC3BC,WAAO,+BAAsB;AACzBC,cAAM,eADmB;AAEzBC,gBAAQ;AACJC,mBAAO;AACHC,4CADG;AAEGC,uBAFH,qBAEa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACE,aAAGC,SAAH,EADF;;AAAA;AACRC,yCADQ;AAAA,yEAEL,UAAUA,EAAEN,IAAZ,GAAmBM,EAAEC,EAFhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGf;AALE;AADH;AAFiB,KAAtB;AADoB,CAAlB,CAAb;;AAeA,IAAMC,gBAAgB,0BAAY,UAACC,OAAD;AAAA,WAAc;AAC5CX,gBAAQY,OADoC;AAE5CC,kBAAU,IAFkC;AAG5C;AACAC,qBAAa;AAAA,mBAAU;AACnBT,sBAAM,SADa;AAEnBU,sBAAMC,MAAMD,IAFO;AAGnBE,yBAASD,MAAMC,OAAN,GAAgBC,KAAKC,SAAL,CAAeR,OAAf,CAHN;AAInBS,2BAAWJ,MAAMI,SAAN,GAAkBJ,MAAMI,SAAN,CAAgB,CAAhB,CAAlB,GAAuC;AAJ/B,aAAV;AAAA;AAJ+B,KAAd;AAAA,CAAZ,CAAtB;;AAYAC,OAAOC,OAAP,GAAiBtB,MAAjB","file":"user.js","sourcesContent":["'use strict';\r\n\r\nimport {\r\n    graphql,\r\n    GraphQLSchema,\r\n    GraphQLObjectType,\r\n    GraphQLString\r\n} from 'graphql';\r\n\r\nimport graphqlHTTP from 'koa-graphql';\r\n\r\nimport DB from '../db/DB'\r\nimport user from './user'\r\n\r\nvar schema = new GraphQLSchema({\r\n    query: new GraphQLObjectType({\r\n        name: 'rootQueryType',\r\n        fields: {\r\n            hello: {\r\n                type: GraphQLString,\r\n                async resolve() {\r\n                    let a = await DB.queryTest();\r\n                    return 'world' + a.name + a.id;\r\n                }\r\n            }\r\n        }\r\n    })\r\n});\r\n\r\nconst graphqlModule = graphqlHTTP((request) => ({\r\n    schema: Schemas,\r\n    graphiql: true,\r\n    // context: { token: request.header.authorization, platform: request.query.platform },\r\n    formatError: error => ({\r\n        type: 'graphql',\r\n        path: error.path,\r\n        message: error.message + JSON.stringify(request),\r\n        locations: error.locations ? error.locations[0] : null\r\n    })\r\n}));\r\n\r\nmodule.exports = schema"]}