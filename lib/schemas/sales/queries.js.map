{"version":3,"sources":["../../../src/schemas/sales/queries.js"],"names":["types","DB","require","commonFields","commonUtils","schemasUtils","materialList","createDefaultListQuery","materialType","query","populate","colorList","colorType","goodsStyleList","baseType","goodsSeasonList","goodsTypeList","maintainPriceList","maintainPriceType","orderShoesList","orderShoesType","goodsShoesProfile","type","goodsShoesType","args","id","resolve","root","params","options","getGoodsShoesProfile","goodsShoesList","name","fields","page","defaultPageType","list","pageSize","conditions","urlString2Conditions","getGoodsShoesList"],"mappings":";;;;;;;AAAA;;AAWA;;IAAYA,K;;AACZ;;AACA;;;;;;AAWA,IAAMC,KAAKC,QAAQ,aAAR,CAAX;AACA,IAAMC,eAAeD,QAAQ,yBAAR,CAArB;AACA,IAAME,cAAcF,QAAQ,0BAAR,CAApB;AACA,IAAMG,eAAeH,QAAQ,2BAAR,CAArB;;AAEO,IAAMI,sCAAeD,aAAaE,sBAAb,CAAoC,cAApC,EAAoDP,MAAMQ,YAA1D,wBAAuF,UAACC,KAAD,EAAU;AAC3H,SAAOA,MAAMC,QAAN,CAAe,OAAf,CAAP;AACD,CAF2B,CAArB;AAGA,IAAMC,gCAAYN,aAAaE,sBAAb,CAAoC,WAApC,EAAiDP,MAAMY,SAAvD,oBAAlB;AACA,IAAMC,0CAAiBR,aAAaE,sBAAb,CAAoC,gBAApC,EAAsDP,MAAMc,QAA5D,yBAAvB;AACA,IAAMC,4CAAkBV,aAAaE,sBAAb,CAAoC,iBAApC,EAAuDP,MAAMc,QAA7D,0BAAxB;AACA,IAAME,wCAAgBX,aAAaE,sBAAb,CAAoC,eAApC,EAAqDP,MAAMc,QAA3D,wBAAtB;AACA,IAAMG,gDAAoBZ,aAAaE,sBAAb,CAAoC,mBAApC,EAAyDP,MAAMkB,iBAA/D,4BAA1B;AACA,IAAMC,0CAAiBd,aAAaE,sBAAb,CAAoC,gBAApC,EAAsDP,MAAMoB,cAA5D,yBAAvB;;AAEA,IAAMC,gDAAoB;AAC/BC,QAAMtB,MAAMuB,cADmB;AAE/BC,QAAM;AACJC,QAAI,EAACH,4BAAD;AADA,GAFyB;AAKzBI,SALyB,mBAKhBC,IALgB,EAKVC,MALU,EAKFC,OALE,EAKO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACvB,iBAAUC,oBAAV,CAA+BF,OAAOH,EAAtC,CADuB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErC;AAP8B,CAA1B;;AAUA,IAAMM,0CAAiB;AAC7BT,QAAM,+BAAsB;AACzBU,UAAM,gBADmB;AAEzBC,YAAQ;AACNC,YAAM,EAACZ,MAAKnB,aAAagC,eAAnB,EADA;AAENC,YAAM,EAACd,MAAK,yBAAgBtB,MAAMuB,cAAtB,CAAN;AAFA;AAFiB,GAAtB,CADuB;AAQ5BC,QAAM;AACJU,UAAM,EAACZ,yBAAD,EADF;AAEJe,cAAU,EAACf,yBAAD,EAFN;AAGJgB,gBAAY,EAAChB,4BAAD;AAHR,GARsB;AAavBI,SAbuB,mBAadC,IAbc,EAaRC,MAbQ,EAaAC,OAbA,EAaS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,kBAAID,OAAOU,UAAX,EAAuB;AACrBV,uBAAOU,UAAP,GAAoBlC,YAAYmC,oBAAZ,CAAiCX,OAAOU,UAAxC,CAApB;AACD;AAHkC;AAAA,qBAItB,iBAAUE,iBAAV,CAA4B,EAACN,MAAKN,OAAOM,IAAb,EAAmBG,UAAST,OAAOS,QAAnC,EAA5B,EAA0E,EAACC,YAAWV,OAAOU,UAAnB,EAA1E,CAJsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKrC;AAlB4B,CAAvB","file":"queries.js","sourcesContent":["import {\r\n\tGraphQLList,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {salesData} from '../../data/index';\r\nimport { \r\n  materialModel, \r\n  colorModel, \r\n  goodsStyleModel, \r\n  goodsSeasonModel, \r\n  goodsTypeModel,\r\n  goodsShoesModel,\r\n  maintainPriceModel,\r\n  orderShoesModel\r\n} from '../../models/sales'\r\n\r\nconst DB = require('../../db/DB')\r\nconst commonFields = require('../common/common-fields')\r\nconst commonUtils = require('../../utils/common-utils')\r\nconst schemasUtils = require('../../utils/schemas-utils')\r\n\r\nexport const materialList = schemasUtils.createDefaultListQuery('materialList', types.materialType, materialModel, (query) =>{\r\n  return query.populate('color')\r\n});\r\nexport const colorList = schemasUtils.createDefaultListQuery('colorList', types.colorType, colorModel);\r\nexport const goodsStyleList = schemasUtils.createDefaultListQuery('goodsStyleList', types.baseType, goodsStyleModel);\r\nexport const goodsSeasonList = schemasUtils.createDefaultListQuery('goodsSeasonList', types.baseType, goodsSeasonModel);\r\nexport const goodsTypeList = schemasUtils.createDefaultListQuery('goodsTypeList', types.baseType, goodsTypeModel);\r\nexport const maintainPriceList = schemasUtils.createDefaultListQuery('maintainPriceList', types.maintainPriceType, maintainPriceModel);\r\nexport const orderShoesList = schemasUtils.createDefaultListQuery('orderShoesList', types.orderShoesType, orderShoesModel);\r\n\r\nexport const goodsShoesProfile = {\r\n  type: types.goodsShoesType,\r\n  args: {\r\n    id: {type:GraphQLString},\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await salesData.getGoodsShoesProfile(params.id);\r\n  }\r\n};\r\n\r\nexport const goodsShoesList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'goodsShoesList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.goodsShoesType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n    if (params.conditions) {\r\n      params.conditions = commonUtils.urlString2Conditions(params.conditions);\r\n    }\r\n    return await salesData.getGoodsShoesList({page:params.page, pageSize:params.pageSize}, {conditions:params.conditions})\r\n\t}\r\n}"]}