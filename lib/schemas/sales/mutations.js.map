{"version":3,"sources":["../../../src/schemas/sales/mutations.js"],"names":["types","DB","require","commonFields","commonUtils","schemasUtils","material","createDefaultMutaion","materialType","materialInputType","color","colorType","colorInputType","goodsStyle","baseType","baseInputType","goodsSeason","goodsType","goodsShoes","goodsShoesType","goodsShoesInputType","maintainPrice","maintainPriceType","maintainPriceInputType","orderShoes","orderShoesType","orderShoesInputType","mutations"],"mappings":";;;;;;;;AAAA;;AAWA;;AAUA;;IAAYA,K;;;;AACZ,IAAMC,KAAKC,QAAQ,aAAR,CAAX;AACA,IAAMC,eAAeD,QAAQ,yBAAR,CAArB;AACA,IAAME,cAAcF,QAAQ,0BAAR,CAApB;AACA,IAAMG,eAAeH,QAAQ,2BAAR,CAArB;;AAEA,IAAMI,WAAWD,aAAaE,oBAAb,CAAkC,UAAlC,EAA8CP,MAAMQ,YAApD,EAAkER,MAAMS,iBAAxE,uBAAjB;AACA,IAAMC,QAAQL,aAAaE,oBAAb,CAAkC,OAAlC,EAA2CP,MAAMW,SAAjD,EAA4DX,MAAMY,cAAlE,oBAAd;AACA,IAAMC,aAAaR,aAAaE,oBAAb,CAAkC,YAAlC,EAAgDP,MAAMc,QAAtD,EAAgEd,MAAMe,aAAtE,yBAAnB;AACA,IAAMC,cAAcX,aAAaE,oBAAb,CAAkC,aAAlC,EAAiDP,MAAMc,QAAvD,EAAiEd,MAAMe,aAAvE,0BAApB;AACA,IAAME,YAAYZ,aAAaE,oBAAb,CAAkC,WAAlC,EAA+CP,MAAMc,QAArD,EAA+Dd,MAAMe,aAArE,wBAAlB;AACA,IAAMG,aAAab,aAAaE,oBAAb,CAAkC,YAAlC,EAAgDP,MAAMmB,cAAtD,EAAsEnB,MAAMoB,mBAA5E,yBAAnB;AACA,IAAMC,gBAAgBhB,aAAaE,oBAAb,CAAkC,eAAlC,EAAmDP,MAAMsB,iBAAzD,EAA4EtB,MAAMuB,sBAAlF,4BAAtB;AACA,IAAMC,aAAanB,aAAaE,oBAAb,CAAkC,YAAlC,EAAgDP,MAAMyB,cAAtD,EAAsEzB,MAAM0B,mBAA5E,yBAAnB;;AAEA,IAAIC,yBAAgBrB,QAAhB,EAA6BI,KAA7B,EAAuCG,UAAvC,EAAsDG,WAAtD,EAAsEC,SAAtE,EAAoFC,UAApF,EAAmGG,aAAnG,EAAqHG,UAArH,CAAJ;kBACeG,S;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mutations.js","sourcesContent":["import {\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType,\r\n  GraphQLList\r\n} from 'graphql';\r\n\r\nimport { \r\n  materialModel, \r\n  colorModel, \r\n  goodsStyleModel, \r\n  goodsSeasonModel, \r\n  goodsTypeModel,\r\n  goodsShoesModel,\r\n  maintainPriceModel,\r\n  orderShoesModel\r\n} from '../../models/sales'\r\nimport * as types from './types';\r\nconst DB = require('../../db/DB')\r\nconst commonFields = require('../common/common-fields')\r\nconst commonUtils = require('../../utils/common-utils')\r\nconst schemasUtils = require('../../utils/schemas-utils')\r\n\r\nconst material = schemasUtils.createDefaultMutaion('material', types.materialType, types.materialInputType, materialModel);\r\nconst color = schemasUtils.createDefaultMutaion('color', types.colorType, types.colorInputType, colorModel);\r\nconst goodsStyle = schemasUtils.createDefaultMutaion('goodsStyle', types.baseType, types.baseInputType, goodsStyleModel);\r\nconst goodsSeason = schemasUtils.createDefaultMutaion('goodsSeason', types.baseType, types.baseInputType, goodsSeasonModel);\r\nconst goodsType = schemasUtils.createDefaultMutaion('goodsType', types.baseType, types.baseInputType, goodsTypeModel);\r\nconst goodsShoes = schemasUtils.createDefaultMutaion('goodsShoes', types.goodsShoesType, types.goodsShoesInputType, goodsShoesModel);\r\nconst maintainPrice = schemasUtils.createDefaultMutaion('maintainPrice', types.maintainPriceType, types.maintainPriceInputType, maintainPriceModel);\r\nconst orderShoes = schemasUtils.createDefaultMutaion('orderShoes', types.orderShoesType, types.orderShoesInputType, orderShoesModel);\r\n\r\nlet mutations = {...material, ...color, ...goodsStyle, ...goodsSeason, ...goodsType, ...goodsShoes, ...maintainPrice, ...orderShoes};\r\nexport default mutations;\r\n\r\n// export const addGoods = {\r\n//   type: types.goodsType,\r\n//   args: {\r\n//     doc: {\r\n//       name: 'doc',\r\n//       type: new GraphQLNonNull(types.goodsInputType)\r\n//     }\r\n//   },\r\n//   async resolve (ctx, params, options) {\r\n//     const shop = await shopData.add(params.doc)\r\n//     ctx.result = '添加成功！';\r\n//     return shop;\r\n//   }\r\n// };\r\n\r\n// export const deleteShop = {\r\n//   type: new GraphQLList(GraphQLString),\r\n//   args: {\r\n//     ids: {type: new GraphQLList(GraphQLString)}\r\n//   },\r\n//   async resolve (ctx, params, options) {\r\n//     const ret = await shopData.removeByIds(params.ids);\r\n//     if (ret) {\r\n//       let res = JSON.parse(ret);\r\n//       console.log('ret=' + JSON.stringify(res));\r\n//       if (ret.ok === 1) return params.ids;\r\n//       return null;\r\n//     }\r\n//     return null;\r\n//   }\r\n// }\r\n\r\n// export const updateShop = {\r\n//   type: commonFields.operateResultType,\r\n//   args: {\r\n//     doc: {type: types.shopInputType},\r\n//   },\r\n//   async resolve (ctx, params, options) {\r\n//     return await shopData.update({_id:params.doc._id}, params.doc);\r\n//   }\r\n// }"]}