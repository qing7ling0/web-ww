{"version":3,"sources":["../../../src/schemas/customer/queries.js"],"names":["types","commonFields","require","commonUtils","schemasUtils","customerList","type","name","fields","page","defaultPageType","list","customerType","args","pageSize","conditions","resolve","root","params","options","urlString2Conditions","getList","customerDetail","find"],"mappings":";;;;;;;AAAA;;AAWA;;IAAYA,K;;AACZ;;AACA;;;;;;AAOA,IAAMC,eAAeC,QAAQ,yBAAR,CAArB;AACA,IAAMC,cAAcD,QAAQ,0BAAR,CAApB;AACA,IAAME,eAAeF,QAAQ,2BAAR,CAArB;;AAEO,IAAMG,sCAAe;AAC3BC,QAAM,+BAAsB;AACzBC,UAAM,cADmB;AAEzBC,YAAQ;AACNC,YAAM,EAACH,MAAKL,aAAaS,eAAnB,EADA;AAENC,YAAM,EAACL,MAAK,yBAAgBN,MAAMY,YAAtB,CAAN;AAFA;AAFiB,GAAtB,CADqB;AAQ1BC,QAAM;AACJJ,UAAM,EAACH,yBAAD,EADF;AAEJQ,cAAU,EAACR,yBAAD,EAFN;AAGJS,gBAAY,EAACT,4BAAD;AAHR,GARoB;AAarBU,SAbqB,mBAaZC,IAbY,EAaNC,MAbM,EAaEC,OAbF,EAaW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,kBAAID,OAAOH,UAAX,EAAuB;AACrBG,uBAAOH,UAAP,GAAoBZ,YAAYiB,oBAAZ,CAAiCF,OAAOH,UAAxC,CAApB;AACD;AAHkC;AAAA,qBAItB,oBAAaM,OAAb,CAAqB,EAACZ,MAAKS,OAAOT,IAAb,EAAmBK,UAASI,OAAOJ,QAAnC,EAArB,EAAmE,EAACC,YAAWG,OAAOH,UAAnB,EAAnE,CAJsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKrC;AAlB0B,CAArB;;AAqBA,IAAMO,0CAAiB;AAC7BhB,QAAMN,MAAMY,YADiB;AAE5BC,QAAM;AACJE,gBAAY,EAACT,4BAAD;AADR,GAFsB;AAKvBU,SALuB,mBAKdC,IALc,EAKRC,MALQ,EAKAC,OALA,EAKS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACtB,oBAAaI,IAAb,CAAkBR,UAAlB,CADsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErC;AAP4B,CAAvB","file":"queries.js","sourcesContent":["import {\r\n\tGraphQLList,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {customerData} from '../../data/index';\r\nimport { \r\n  footModel,\r\n  customerModel,\r\n  beltModel,\r\n  watchStrapModel\r\n} from '../../models/customer'\r\n\r\nconst commonFields = require('../common/common-fields')\r\nconst commonUtils = require('../../utils/common-utils')\r\nconst schemasUtils = require('../../utils/schemas-utils')\r\n\r\nexport const customerList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'customerList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.customerType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n    if (params.conditions) {\r\n      params.conditions = commonUtils.urlString2Conditions(params.conditions);\r\n    }\r\n    return await customerData.getList({page:params.page, pageSize:params.pageSize}, {conditions:params.conditions})\r\n\t}\r\n}\r\n\r\nexport const customerDetail = {\r\n\ttype: types.customerType,\r\n  args: {\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n    return await customerData.find(conditions)\r\n\t}\r\n}"]}