{"version":3,"sources":["../../src/schemas/index.js"],"names":["_expressGraphql","require","createModule","schema","request","response","ctx","graphiql","rootValue","formatError","type","path","error","name","originalError","message","code","locations","query","fields","queries","mutation","mutations","register","router","all","module","exports"],"mappings":"AAAA;;;;AAEA;;;;AAEA;;AAMA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAZA,IAAIA,kBAAkBC,QAAQ,iBAAR,CAAtB;;;AAcA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAAA;;AAC1B,WAAO;AAAA,2EAAY,iBAAOC,OAAP,EAAgBC,QAAhB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,6DACR;AACHH,wCAAQA,MADL;AAEHI,0CAAU,KAFP;AAGHC,2CAAWF,GAHR;AAIH;AACAG,6CAAa;AAAA,2CAAU;AACnBC,8CAAM,SADa;AAEnBC,8CAAMC,MAAMD,IAFO;AAGnBE,8CAAOD,MAAME,aAAN,IAAuBF,MAAME,aAAN,CAAoBD,IAA5C,IAAqDD,MAAMC,IAH9C;AAInBE,iDAASH,MAAMG,OAJI;AAKnBC,8CAAOJ,MAAME,aAAN,IAAuBF,MAAME,aAAN,CAAoBE,IAA5C,IAAqD,CAAC,CALzC;AAMnBC,mDAAWL,MAAMK,SAAN,GAAkBL,MAAMK,SAAN,CAAgB,CAAhB,CAAlB,GAAuC;AAN/B,qCAAV;AAAA;AALV,6BADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,QAAP;AAgBH;;AAED,IAAId,SAAS,2BAAkB;AAC7Be,WAAO,+BAAsB;AAC3BL,cAAM,OADqB;AAE3BM,6BACO,gBAAKC,OADZ,EAEO,gBAAOA,OAFd,EAGO,gBAAKA,OAHZ,EAIO,gBAASA,OAJhB,EAKO,iBAAMA,OALb;AAF2B,KAAtB,CADsB;;AAY7BC,cAAU,+BAAsB;AAC9BR,cAAM,UADwB;AAE9BM,6BACO,gBAAKG,SADZ,EAEO,gBAAKA,SAFZ,EAGO,gBAAOA,SAHd,EAIO,gBAAOF,OAJd,EAKO,gBAASE,SALhB,EAMO,iBAAMA,SANb;AAF8B,KAAtB;AAZmB,CAAlB,CAAb;;AAyBA,SAASC,QAAT,GAAoB;AAChB,WAAO,UAAUC,MAAV,EAAkB;AACrBA,eAAOC,GAAP,CAAW,MAAX,EAAmBvB,aAAaC,MAAb,CAAnB;AACH,KAFD;AAGH;;AAGDuB,OAAOC,OAAP,GAAiBJ,UAAjB","file":"index.js","sourcesContent":["'use strict';\r\n\r\nimport graphqlHTTP from 'koa-graphql'\r\nvar _expressGraphql = require('express-graphql');\r\nimport {\r\n    GraphQLObjectType,\r\n    GraphQLSchema\r\n} from 'graphql';\r\n  \r\n\r\nimport DB from '../db/DB'\r\nimport user from './user/index'\r\nimport common from './common/index'\r\nimport shop from './shop/index'\r\nimport customer from './customer/index'\r\nimport sales from './sales/index'\r\n\r\nfunction createModule(schema) {\r\n    return graphqlHTTP(async (request, response, ctx) => {\r\n        return {\r\n            schema: schema,\r\n            graphiql: false,\r\n            rootValue: ctx,\r\n            // context: {platform: JSON.stringify(dd)},\r\n            formatError: error => ({\r\n                type: 'graphql',\r\n                path: error.path,\r\n                name: (error.originalError && error.originalError.name) || error.name,\r\n                message: error.message,\r\n                code: (error.originalError && error.originalError.code) || -1,\r\n                locations: error.locations ? error.locations[0] : null\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nlet schema = new GraphQLSchema({\r\n  query: new GraphQLObjectType({\r\n    name: 'Query',\r\n    fields: {\r\n        ...user.queries, \r\n        ...common.queries,\r\n        ...shop.queries,\r\n        ...customer.queries,\r\n        ...sales.queries,\r\n    }\r\n  }),\r\n\r\n  mutation: new GraphQLObjectType({\r\n    name: 'Mutation',\r\n    fields: {\r\n        ...user.mutations,\r\n        ...shop.mutations,\r\n        ...common.mutations, \r\n        ...common.queries,\r\n        ...customer.mutations,\r\n        ...sales.mutations,\r\n    }\r\n  })\r\n});\r\n\r\nfunction register() {\r\n    return function (router) {\r\n        router.all('/api', createModule(schema));\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = register();"]}