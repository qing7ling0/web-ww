{"version":3,"sources":["../../../src/schemas/shop/queries.js"],"names":["types","commonFields","require","commonUtils","shopList","type","name","fields","page","defaultPageType","list","shopType","args","pageSize","conditions","resolve","root","params","options","console","log","decodeURIComponent","urlString2Conditions","JSON","stringify","getList","shopDetail","find"],"mappings":";;;;;;;AAAA;;AAWA;;IAAYA,K;;AACZ;;;;;;AACA,IAAMC,eAAeC,QAAQ,yBAAR,CAArB;AACA,IAAMC,cAAcD,QAAQ,0BAAR,CAApB;;AAEO,IAAME,8BAAW;AACvBC,QAAM,+BAAsB;AACzBC,UAAM,UADmB;AAEzBC,YAAQ;AACNC,YAAM,EAACH,MAAKJ,aAAaQ,eAAnB,EADA;AAENC,YAAM,EAACL,MAAK,yBAAgBL,MAAMW,QAAtB,CAAN;AAFA;AAFiB,GAAtB,CADiB;AAQtBC,QAAM;AACJJ,UAAM,EAACH,yBAAD,EADF;AAEJQ,cAAU,EAACR,yBAAD,EAFN;AAGJS,gBAAY,EAACT,4BAAD;AAHR,GARgB;AAajBU,SAbiB,mBAaRC,IAbQ,EAaFC,MAbE,EAaMC,OAbN,EAae;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC,kBAAID,OAAOH,UAAX,EAAuB;AACrBK,wBAAQC,GAAR,CAAYC,mBAAmBJ,OAAOH,UAA1B,CAAZ;AACAG,uBAAOH,UAAP,GAAoBX,YAAYmB,oBAAZ,CAAiCL,OAAOH,UAAxC,CAApB;AACAK,wBAAQC,GAAR,CAAYG,KAAKC,SAAL,CAAeP,OAAOH,UAAtB,CAAZ;AACD;AALkC;AAAA,qBAMtB,gBAASW,OAAT,CAAiB,EAACjB,MAAKS,OAAOT,IAAb,EAAmBK,UAASI,OAAOJ,QAAnC,EAAjB,EAA+D,EAACC,YAAWG,OAAOH,UAAnB,EAA/D,CANsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrC;AApBsB,CAAjB;;AAuBA,IAAMY,kCAAa;AACzBrB,QAAML,MAAMW,QADa;AAExBC,QAAM;AACJE,gBAAY,EAACT,4BAAD;AADR,GAFkB;AAKnBU,SALmB,mBAKVC,IALU,EAKJC,MALI,EAKIC,OALJ,EAKa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACtB,gBAASS,IAAT,CAAcb,UAAd,CADsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErC;AAPwB,CAAnB","file":"queries.js","sourcesContent":["import {\r\n\tGraphQLList,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {shopData} from '../../data/index';\r\nconst commonFields = require('../common/common-fields')\r\nconst commonUtils = require('../../utils/common-utils')\r\n\r\nexport const shopList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'shopList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.shopType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n    if (params.conditions) {\r\n      console.log(decodeURIComponent(params.conditions));\r\n      params.conditions = commonUtils.urlString2Conditions(params.conditions);\r\n      console.log(JSON.stringify(params.conditions));\r\n    }\r\n    return await shopData.getList({page:params.page, pageSize:params.pageSize}, {conditions:params.conditions})\r\n\t}\r\n}\r\n\r\nexport const shopDetail = {\r\n\ttype: types.shopType,\r\n  args: {\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n    return await shopData.find(conditions)\r\n\t}\r\n}"]}