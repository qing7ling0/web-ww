{"version":3,"sources":["../../../src/schemas/common/mutations.js"],"names":["types","commonFields","require","schemasUtils","menuAdd","type","menu","args","info","name","resolve","root","params","options","addCommon","commonType","doc","commonInputType","ctx","common","result","deleteCommon","ids","removeCommonByIds","ret","res","JSON","parse","ok","updateCommon","operateResultType","_id"],"mappings":";;;;;;;AAAA;;AAUA;;IAAYA,K;;AACZ;;AACA;;;;;;AAGA,IAAMC,eAAeC,QAAQ,yBAAR,CAArB;AACA,IAAMC,eAAeD,QAAQ,2BAAR,CAArB;;AAEO,IAAME,4BAAU;AACrBC,QAAML,MAAMM,IADS;AAErBC,QAAM;AACJC,UAAM;AACJC,YAAM,MADF;AAEJJ;AAFI;AADF,GAFe;AAQfK,SARe,mBAQNC,IARM,EAQAC,MARA,EAQQC,OARR,EAQiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACrC;AAToB,CAAhB;;AAYA,IAAMC,gCAAY;AACvBT,QAAML,MAAMe,UADW;AAEvBR,QAAM;AACJS,SAAK;AACHP,YAAM,KADH,EACUJ,MAAM,4BAAmBL,MAAMiB,eAAzB;AADhB;AADD,GAFiB;AAOjBP,SAPiB,mBAORQ,GAPQ,EAOHN,MAPG,EAOKC,OAPL,EAOc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACd,kBAAWC,SAAX,CAAqBF,OAAOI,GAA5B,CADc;;AAAA;AAC7BG,oBAD6B;;AAEnCD,kBAAIE,MAAJ,GAAa,OAAb;AAFmC,gDAG5BD,MAH4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpC;AAXsB,CAAlB;AAaA,IAAME,sCAAe;AAC1BhB,QAAM,gDADoB;AAE1BE,QAAM;AACJe,SAAK,EAACjB,MAAM,gDAAP;AADD,GAFoB;AAKpBK,SALoB,mBAKXQ,GALW,EAKNN,MALM,EAKEC,OALF,EAKW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACjB,kBAAWU,iBAAX,CAA6BX,OAAOU,GAApC,CADiB;;AAAA;AAC7BE,iBAD6B;;AAAA,mBAE/BA,GAF+B;AAAA;AAAA;AAAA;;AAG7BC,iBAH6B,GAGvBC,KAAKC,KAAL,CAAWH,GAAX,CAHuB;;AAAA,oBAI7BA,IAAII,EAAJ,KAAW,CAJkB;AAAA;AAAA;AAAA;;AAAA,gDAIRhB,OAAOU,GAJC;;AAAA;AAAA,gDAK1B,IAL0B;;AAAA;AAAA,gDAO5B,IAP4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQpC;AAbyB,CAArB;AAeA,IAAMO,sCAAe;AAC1BxB,QAAMJ,aAAa6B,iBADO;AAE1BvB,QAAM;AACJS,SAAK,EAACX,MAAML,MAAMiB,eAAb;AADD,GAFoB;AAKpBP,SALoB,mBAKXQ,GALW,EAKNN,MALM,EAKEC,OALF,EAKW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACtB,kBAAWgB,YAAX,CAAwB,EAACE,KAAInB,OAAOI,GAAP,CAAWe,GAAhB,EAAxB,EAA8CnB,OAAOI,GAArD,CADsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpC;AAPyB,CAArB","file":"mutations.js","sourcesContent":["import {\r\n  GraphQLList,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {commonData} from '../../data/index';\r\nimport { \r\n  commonModel\r\n} from '../../models'\r\nconst commonFields = require('../common/common-fields')\r\nconst schemasUtils = require('../../utils/schemas-utils')\r\n\r\nexport const menuAdd = {\r\n  type: types.menu,\r\n  args: {\r\n    info: {\r\n      name: 'info',\r\n      type: GraphQLString\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n  }\r\n};\r\n\r\nexport const addCommon = {\r\n  type: types.commonType,\r\n  args: {\r\n    doc: {\r\n      name: 'doc', type: new GraphQLNonNull(types.commonInputType)\r\n    }\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    const common = await commonData.addCommon(params.doc)\r\n    ctx.result = '添加成功！';\r\n    return common;\r\n  }\r\n};\r\nexport const deleteCommon = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    const ret = await commonData.removeCommonByIds(params.ids);\r\n    if (ret) {\r\n      let res = JSON.parse(ret);\r\n      if (ret.ok === 1) return params.ids;\r\n      return null;\r\n    }\r\n    return null;\r\n  }\r\n}\r\nexport const updateCommon = {\r\n  type: commonFields.operateResultType,\r\n  args: {\r\n    doc: {type: types.commonInputType},\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    return await commonData.updateCommon({_id:params.doc._id}, params.doc);\r\n  }\r\n}\r\n"]}