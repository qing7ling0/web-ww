{"version":3,"sources":["../../../src/schemas/user.1/mutations.js"],"names":["types","addUser","type","userType","args","info","name","userInputType","resolve","root","params","options","newUser","addAdmin","user","adminInputType","account","accountInputType","user_type","admin","deleteAdmin","ids","deleteUser","updateAdmin","fields","updateUser","login","password","ctx","logout","logoutType","id","ret"],"mappings":"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","file":"mutations.js","sourcesContent":["import {\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType,\r\n  GraphQLList\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {userData} from '../../data/index';\r\n\r\n\r\nexport const addUser = {\r\n  type: types.userType,\r\n  args: {\r\n    info: {\r\n      name: 'info',\r\n      type: new GraphQLNonNull(types.userInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n};\r\n\r\nexport const addAdmin = {\r\n  type: types.userType,\r\n  args: {\r\n    user: {\r\n      name: 'user',\r\n      type: new GraphQLNonNull(types.adminInputType)\r\n    },\r\n    account:{\r\n      name: 'account',\r\n      type: new GraphQLNonNull(types.accountInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().admin;\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport const deleteAdmin = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().admin;\r\n    const ids = await userData.deleteUser(root, params);\r\n    return ids;\r\n  }\r\n}\r\n\r\nexport const updateAdmin = {\r\n  type: types.userType,\r\n  args: {\r\n    fields: {type: types.adminInputType}\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await userData.updateUser(userData.types().admin, params.fields);\r\n  }\r\n}\r\n\r\nexport const login = {\r\n  type: types.userType,\r\n  args: {\r\n    account: {\r\n      name: 'account',\r\n      type: GraphQLString\r\n    },\r\n    password: {\r\n      name: 'password',\r\n      type: GraphQLString\r\n    },\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    let user = await userData.login(ctx, params);\r\n    return user;\r\n  }\r\n};\r\n\r\nexport const logout = {\r\n  type: types.logoutType,\r\n  args: {\r\n    id: {\r\n      name:'id',\r\n      type:GraphQLString\r\n    }\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    let ret = await userData.logout(ctx, params);\r\n    return ret;\r\n  }\r\n};"]}