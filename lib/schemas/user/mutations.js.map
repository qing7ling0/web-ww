{"version":3,"sources":["../../../src/schemas/user/mutations.js"],"names":["types","addUser","type","userType","args","info","name","userInputType","resolve","root","params","options","newUser","addAdmin","user","adminInputType","account","accountInputType","user_type","admin","deleteAdmin","ids","deleteUser","updateAdmin","fields","updateUser","addShopGuide","shopGuideInputType","shopGuide","deleteShopGuide","updateShopGuide","addOperate","operateInputType","operate","deleteOperate","updateOperate","addProduction","productionInputType","production","deleteProduction","updateProduction","login","password","ctx","logout","logoutType","id","ret"],"mappings":"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","file":"mutations.js","sourcesContent":["import {\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType,\r\n  GraphQLList\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {userData} from '../../data/index';\r\n\r\n\r\nexport const addUser = {\r\n  type: types.userType,\r\n  args: {\r\n    info: {\r\n      name: 'info',\r\n      type: new GraphQLNonNull(types.userInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n};\r\n\r\nexport const addAdmin = {\r\n  type: types.userType,\r\n  args: {\r\n    user: {\r\n      name: 'user',\r\n      type: new GraphQLNonNull(types.adminInputType)\r\n    },\r\n    account:{\r\n      name: 'account',\r\n      type: new GraphQLNonNull(types.accountInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().admin;\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport const deleteAdmin = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().admin;\r\n    const ids = await userData.deleteUser(root, params);\r\n    return ids;\r\n  }\r\n}\r\n\r\nexport const updateAdmin = {\r\n  type: types.userType,\r\n  args: {\r\n    fields: {type: types.adminInputType}\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await userData.updateUser(userData.types().admin, params.fields);\r\n  }\r\n}\r\n\r\nexport const addShopGuide = {\r\n  type: types.userType,\r\n  args: {\r\n    user: {\r\n      name: 'user',\r\n      type: new GraphQLNonNull(types.shopGuideInputType)\r\n    },\r\n    account:{\r\n      name: 'account',\r\n      type: new GraphQLNonNull(types.accountInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().shopGuide;\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport const deleteShopGuide = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().shopGuide;\r\n    const ids = await userData.deleteUser(root, params);\r\n    return ids;\r\n  }\r\n}\r\n\r\nexport const updateShopGuide = {\r\n  type: types.userType,\r\n  args: {\r\n    fields: {type: types.shopGuideInputType}\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await userData.updateUser(userData.types().shopGuide, params.fields);\r\n  }\r\n}\r\n\r\nexport const addOperate = {\r\n  type: types.userType,\r\n  args: {\r\n    user: {\r\n      name: 'user',\r\n      type: new GraphQLNonNull(types.operateInputType)\r\n    },\r\n    account:{\r\n      name: 'account',\r\n      type: new GraphQLNonNull(types.accountInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().operate;\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport const deleteOperate = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().operate;\r\n    const ids = await userData.deleteUser(root, params);\r\n    return ids;\r\n  }\r\n}\r\n\r\nexport const updateOperate = {\r\n  type: types.userType,\r\n  args: {\r\n    fields: {type: types.operateInputType}\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await userData.updateUser(userData.types().operate, params.fields);\r\n  }\r\n}\r\n\r\n\r\nexport const addProduction = {\r\n  type: types.userType,\r\n  args: {\r\n    user: {\r\n      name: 'user',\r\n      type: new GraphQLNonNull(types.productionInputType)\r\n    },\r\n    account:{\r\n      name: 'account',\r\n      type: new GraphQLNonNull(types.accountInputType)\r\n    }\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().production;\r\n    const newUser = await userData.addUser(root, params);\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport const deleteProduction = {\r\n  type: new GraphQLList(GraphQLString),\r\n  args: {\r\n    ids: {type: new GraphQLList(GraphQLString)}\r\n  },\r\n  async resolve (root, params, options) {\r\n    params.user_type = userData.types().production;\r\n    const ids = await userData.deleteUser(root, params);\r\n    return ids;\r\n  }\r\n}\r\n\r\nexport const updateProduction = {\r\n  type: types.userType,\r\n  args: {\r\n    fields: {type: types.productionInputType}\r\n  },\r\n  async resolve (root, params, options) {\r\n    return await userData.updateUser(userData.types().production, params.fields);\r\n  }\r\n}\r\n\r\nexport const login = {\r\n  type: types.userType,\r\n  args: {\r\n    account: {\r\n      name: 'account',\r\n      type: GraphQLString\r\n    },\r\n    password: {\r\n      name: 'password',\r\n      type: GraphQLString\r\n    },\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    let user = await userData.login(ctx, params);\r\n    return user;\r\n  }\r\n};\r\n\r\nexport const logout = {\r\n  type: types.logoutType,\r\n  args: {\r\n    id: {\r\n      name:'id',\r\n      type:GraphQLString\r\n    }\r\n  },\r\n  async resolve (ctx, params, options) {\r\n    let ret = await userData.logout(ctx, params);\r\n    return ret;\r\n  }\r\n};"]}