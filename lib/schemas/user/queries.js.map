{"version":3,"sources":["../../../src/schemas/user/queries.js"],"names":["types","commonFields","require","commonUtils","adminList","type","name","fields","page","defaultPageType","list","userType","args","pageSize","resolve","root","params","options","user_type","admin","getUserList","ret","shopGuideList","conditions","shopGuide","urlString2Conditions","operateList","operate","productionList","production"],"mappings":"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","file":"queries.js","sourcesContent":["import {\r\n\tGraphQLList,\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLString,\r\n  GraphQLID,\r\n  GraphQLInt,\r\n  GraphQLBoolean,\r\n  GraphQLInputObjectType\r\n} from 'graphql';\r\n\r\nimport * as types from './types';\r\nimport {userData} from '../../data/index';\r\nconst commonFields = require('../common/common-fields')\r\nconst commonUtils = require('../../utils/common-utils')\r\n\r\n// export const adminList = {\r\n// \ttype: new GraphQLList(types.userType),\r\n//   args: {\r\n//     page: {type: GraphQLInt},\r\n//     pageSize: {type: GraphQLInt},\r\n//   },\r\n// \tasync resolve (root, params, options) {\r\n// \t\tparams.user_type = userData.types().admin;\r\n// \t\tvar users = await userData.getUserList(root, params);\r\n// \t\treturn users;\r\n// \t}\r\n// }\r\n\r\nexport const adminList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'adminListPage',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.userType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n  },\r\n\tasync resolve (root, params, options) {\r\n\t\tparams.user_type = userData.types().admin;\r\n\t\tvar ret = await userData.getUserList(root, params);\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nexport const shopGuideList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'shopGuideList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.userType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n\t\tparams.user_type = userData.types().shopGuide;\r\n    params.conditions = commonUtils.urlString2Conditions(params.conditions);\r\n\t\tvar ret = await userData.getUserList(root, params);\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nexport const operateList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'operateList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.userType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n  },\r\n\tasync resolve (root, params, options) {\r\n\t\tparams.user_type = userData.types().operate;\r\n\t\tvar ret = await userData.getUserList(root, params);\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nexport const productionList = {\r\n\ttype: new GraphQLObjectType({\r\n    name: 'productionList',\r\n    fields: {\r\n      page: {type:commonFields.defaultPageType},\r\n      list: {type:new GraphQLList(types.userType)}\r\n    }\r\n  }),\r\n  args: {\r\n    page: {type: GraphQLInt},\r\n    pageSize: {type: GraphQLInt},\r\n    conditions: {type:GraphQLString}\r\n  },\r\n\tasync resolve (root, params, options) {\r\n\t\tparams.user_type = userData.types().production;\r\n\t\tvar ret = await userData.getUserList(root, params);\r\n\t\treturn ret;\r\n\t}\r\n}"]}